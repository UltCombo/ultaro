#!/bin/bash

#          Ultaro
# Ult's Manjaro GNOME setup

set -euxo pipefail
cd "$(dirname "${BASH_SOURCE[0]}")"

if [ "$(id -u)" -eq 0 ]; then
  echo 'This script cannot be run as root.'
  exit 1
fi

. util/remove_packages.sh

# Set up Pacman hooks.
./vivaldi/install-customizations
sudo ln -f pacman/hooks/* /usr/share/libalpm/hooks/

# Set up GNOME extensions configs.
dconf load /org/gnome/shell/extensions/ < dconf/extensions.conf

# Set up Files config.
dconf load /org/gnome/nautilus/ < dconf/nautilus.conf

# Add emote?
# Add GNOME keybind for emote?
# Remove emoji-selector extension?
# Disable activities hot corner

grep -qF 'ILoveCandy' /etc/pacman.conf || sudo sed -i'' '/# Misc options/a ILoveCandy' /etc/pacman.conf
grep -qF '[herecura]' /etc/pacman.conf || cat pacman/repos.conf | sudo tee -a /etc/pacman.conf
sudo pacman -Syu --noconfirm
remove_packages tlp manjaro-hello manjaro-gdm-theme manjaro-gnome-assets nautilus-empty-file gnome-screenshot gthumb totem caffeine-ng mntray
sudo pacman -S --needed --noconfirm base-devel yay yarn python-pip git hub fish docker docker-compose chrome-gnome-shell xorg-xprop xorg-xkill xclip flameshot nomacs vlc papirus-icon-theme noto-fonts-emoji vivaldi vivaldi-ffmpeg-codecs pepper-flash slack-desktop libappindicator-gtk2 libappindicator-gtk3 openresolv dnsmasq
yay -S --needed --noconfirm visual-studio-code-bin watchman stacer nvm terraform ttf-fira-code
yay -Sd --needed --noconfirm gnome-shell-extension-clipboard-indicator-git gnome-shell-extension-dash-to-dock-git gnome-shell-extension-dynamic-top-bar-git gnome-shell-extension-emoji-selector-git gnome-shell-extension-unite-git gnome-shell-extension-appindicator-git gnome-shell-extension-gsconnect
# Temporarily disabled due to PKGBUILD error: gnome-shell-extension-hidetopbar-git gnome-shell-extension-middleclickclose-git
pip install --user --upgrade awscli
yay -Yc --noconfirm
yes | yay -Scc || true

mkdir -p ~/.local/share/gnome-shell/extensions
ln -sf "$(pwd)"/extensions/* ~/.local/share/gnome-shell/extensions/
for extension in extensions/*; do
  gnome-extensions enable "$(basename "$extension")" || true
done

for extension in clipboard-indicator@tudmotu.com dash-to-dock@micxgx.gmail.com dynamicTopBar@gnomeshell.feildel.fr emoji-selector@maestroschan.fr hidetopbar@mathieu.bidon.ca middleclickclose@paolo.tranquilli.gmail.com unite@hardpixel.eu appindicatorsupport@rgcjonas.gmail.com gsconnect@andyholmes.github.io; do
  gnome-extensions enable "$extension" || true
done

# Set up configs, desktop files and default applications.
sudo ln -f etc/* /etc/
sudo ln -f browser_launcher/bin/* /usr/bin/
ln -f desktop/* ~/.local/share/applications/
cp -rlf config/* ~/.config/
nomacs --import-settings nomacs/nomacs.ini

# Set up dnsmasq as DNS server.
sudo systemctl enable --now dnsmasq
grep -qF '::1' /etc/resolvconf.conf || echo $'\nname_servers="::1 127.0.0.1"' | sudo tee -a /etc/resolvconf.conf

# Set up Network Manager.
sudo ln -f network-manager/* /etc/NetworkManager/conf.d/

sudo resolvconf -u

# Set up fonts.
sudo ln -f fonts/* /etc/fonts/

# Set up $PATH.
grep -qF "$(yarn global bin)" ~/.bash_profile || echo PATH="$(yarn global bin):~/.local/bin:\$PATH" >> ~/.bash_profile
fish --command 'echo $fish_user_paths | grep -qF (yarn global bin) || set -U fish_user_paths (yarn global bin) ~/.local/bin $fish_user_paths'

# Set up Docker.
sudo gpasswd -a "$(whoami)" docker

# Set up fish, nvm, fast-nvm-fish.
chsh -s /usr/bin/fish
mkdir -p ~/.config/fish/functions
ln -f fish/functions/* ~/.config/fish/functions/
./fish/theme.fish
./fish/abbr.fish
sudo chown -R "$(whoami)" /usr/share/nvm
grep -qF 'init-nvm.sh' ~/.bashrc || echo 'source /usr/share/nvm/init-nvm.sh' >> ~/.bashrc
grep -qF 'NVM_DIR' ~/.config/fish/config.fish || echo 'set -gx NVM_DIR /usr/share/nvm' >> ~/.config/fish/config.fish
curl -sSL https://raw.githubusercontent.com/brigand/fast-nvm-fish/master/nvm.fish > ~/.config/fish/functions/nvm.fish
fish --command 'nvm install 16'
grep -qF 'nvm use' ~/.config/fish/config.fish || echo 'nvm use 16' >> ~/.config/fish/config.fish

# Set up GNOME.
timedatectl set-ntp 1
gsettings set org.gnome.desktop.datetime automatic-timezone true
gsettings set org.gnome.desktop.interface gtk-theme 'Adwaita-dark'
gsettings set org.gnome.desktop.interface icon-theme 'Papirus'
gsettings set org.gnome.desktop.interface clock-show-date false
gsettings set org.gnome.desktop.interface clock-show-seconds false
gsettings set org.gnome.desktop.interface clock-show-weekday false
gsettings set org.gnome.desktop.privacy remember-recent-files false
gsettings set org.gnome.desktop.privacy recent-files-max-age 0
gsettings set org.gnome.desktop.session idle-delay 900
gsettings set org.gnome.desktop.screensaver lock-enabled false
gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-ac-type 'nothing'
gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-battery-type 'nothing'
gsettings set org.gnome.desktop.notifications show-in-lock-screen false
gsettings set org.gnome.desktop.background picture-uri "file://$(pwd)/images/wallpaper.jpg"
gsettings set org.gnome.desktop.screensaver picture-uri "file://$(pwd)/images/lock_screen.jpg"
gsettings set org.gnome.shell favorite-apps "['vivaldi-stable.desktop', 'visual-studio-code.desktop', 'org.gnome.Nautilus.desktop', 'org.gnome.Terminal.desktop']"
gsettings set org.gtk.Settings.FileChooser sort-directories-first true

# Replace gnome-screenshot keybindings with flameshot.
SCREENSHOT_PATH="$HOME/Pictures/Screenshots"
mkdir -p "$SCREENSHOT_PATH"
gsettings set org.gnome.settings-daemon.plugins.media-keys screenshot '[]'
gsettings set org.gnome.settings-daemon.plugins.media-keys screenshot-clip '[]'
gsettings set org.gnome.settings-daemon.plugins.media-keys window-screenshot '[]'
gsettings set org.gnome.settings-daemon.plugins.media-keys window-screenshot-clip '[]'
gsettings set org.gnome.settings-daemon.plugins.media-keys area-screenshot '[]'
gsettings set org.gnome.settings-daemon.plugins.media-keys area-screenshot-clip '[]'
gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings "['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom2/']"
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ name "Flameshot - capture full"
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ command "flameshot full -p '$SCREENSHOT_PATH'"
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ binding "Print"
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/ name "Flameshot - capture screen"
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/ command "flameshot screen -p '$SCREENSHOT_PATH'"
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/ binding "<Ctrl>Print"
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom2/ name "Flameshot - capture GUI"
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom2/ command "flameshot gui -p '$SCREENSHOT_PATH'"
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom2/ binding "<Shift>Print"

# Don't suspend when lid is closed.
sudo sed -i'' -E 's/.*(HandleLidSwitch=).*/\1ignore/' /etc/systemd/logind.conf

# Set up system.
echo 'vm.max_map_count=262144' | sudo tee /etc/sysctl.d/11-ultaro.conf
sudo sysctl --system

# Set up startup applications and services.
flameshot config --autostart true
sudo systemctl mask --now man-db.timer

# Clean up.
rm -f ~/Readme ~/Templates/*

cat << EOF
âœ¨ Setup finished successfully.

#
# Manual config
#

VS Code Sync Settings: https://gist.github.com/UltCombo/6107218148de04eb7b2165b5a4c00645
DuckDuckGo search template: https://duckduckgo.com/?q=%s&t=vivaldi&kae=d&k1=-1&kaj=m&kam=osm&kak=-1&kax=-1&kaq=-1&kap=-1&kao=-1&kau=-1&k5=2&k7=282c34&kj=21252b&k9=98c379&kx=61afef
EOF
